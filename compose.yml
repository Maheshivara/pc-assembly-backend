services:
  postgres:
    image: postgres:17-alpine
    container_name: pc_assembly_parts_db
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT-5432}:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 10s
    volumes:
      - pc_assembly_parts_data:/var/lib/postgresql/data
  
  migration:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.migrate
    container_name: pc_assembly_parts_migration
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?schema=${POSTGRES_SCHEMA}
  dw_creator:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.dw_creator
    container_name: pc_assembly_parts_dw_creator
    depends_on:
      postgres:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432

volumes:
  pc_assembly_parts_data: