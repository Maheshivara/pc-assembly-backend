CREATE SCHEMA IF NOT EXISTS desktop
  AUTHORIZATION pg_database_owner;

COMMENT ON SCHEMA desktop
  IS 'standard public schema';

GRANT USAGE ON SCHEMA desktop TO postgres;

GRANT ALL ON SCHEMA desktop TO pg_database_owner;

CREATE TABLE IF NOT EXISTS desktop."CPUCooler" (
  "name" text NOT NULL,
  "mpn" text PRIMARY KEY,
  "ean" text NOT NULL,
  "upc" text NOT NULL,
  "brand" text NOT NULL,
  "sockets" text NOT NULL,
  "height" integer NOT NULL,
  "tdp" integer NOT NULL,
  "eightMm" integer NOT NULL,
  "nintyTwoMm" integer NOT NULL,
  "oneHundredTwentyMm" integer NOT NULL,
  "oneHundredFortyMm" integer NOT NULL,
  "twoHundredMm" integer NOT NULL,
  "adicionalFan" boolean NOT NULL,
  "imageUrl" text NOT NULL,
  "originalUrl" text NOT NULL,
  "productUrl" text
);

CREATE TABLE IF NOT EXISTS desktop."CPU" (
  "name" text NOT NULL,
  "mpn" text PRIMARY KEY,
  "ean" text NOT NULL,
  "brand" text NOT NULL,
  "cores" integer NOT NULL,
  "threads" integer NOT NULL,
  "speed" real NOT NULL,
  "turboSpeed" real,
  "tdp" integer NOT NULL,
  "socket" text NOT NULL,
  "graphics" text NOT NULL,
  "imageUrl" text NOT NULL,
  "originalUrl" text NOT NULL,
  "productUrl" text
);

CREATE TABLE IF NOT EXISTS desktop."GPU" (
  "name" text NOT NULL,
  "mpn" text PRIMARY KEY,
  "ean" text NOT NULL,
  "brand" text NOT NULL,
  "length" integer NOT NULL,
  "widthSlots" real,
  "eightPin" integer NOT NULL,
  "sixPin" integer NOT NULL,
  "hdmi" integer NOT NULL,
  "dp" integer NOT NULL,
  "dvi" integer NOT NULL,
  "vga" integer NOT NULL,
  "boostClockSpeed" real,
  "vram" integer NOT NULL,
  "memoryClockSpeed" real NOT NULL,
  "tdp" integer NOT NULL,
  "sync" text NOT NULL,
  "imageUrl" text NOT NULL,
  "originalUrl" text NOT NULL,
  "productUrl" text
);

CREATE TABLE IF NOT EXISTS desktop."HD" (
  "name" text NOT NULL,
  "mpn" text PRIMARY KEY,
  "ean" text NOT NULL,
  "brand" text NOT NULL,
  "formFactor" text NOT NULL,
  "capacity" integer NOT NULL,
  "rpm" integer NOT NULL,
  "imageUrl" text NOT NULL,
  "originalUrl" text NOT NULL,
  "productUrl" text
);

CREATE TABLE IF NOT EXISTS desktop."MemoriaRAM" (
  "name" text NOT NULL,
  "mpn" text PRIMARY KEY,
  "ean" text NOT NULL,
  "brand" text NOT NULL,
  "type" text NOT NULL,
  "capacity" integer NOT NULL,
  "clockSpeed" integer NOT NULL,
  "timings" text NOT NULL,
  "imageUrl" text NOT NULL,
  "originalUrl" text NOT NULL,
  "productUrl" text
);

CREATE TABLE IF NOT EXISTS desktop."PlacaMae" (
  "name" text NOT NULL,
  "brand" text NOT NULL,
  "mpn" text PRIMARY KEY,
  "ean" text NOT NULL,
  "upc" text NOT NULL,
  "socket" text NOT NULL,
  "chipset" text NOT NULL,
  "formFactor" text NOT NULL,
  "memoryType" text NOT NULL,
  "memoryCapacity" integer NOT NULL,
  "memorySlots" integer NOT NULL,
  "memorySpeed" text,
  "sataSlots" integer NOT NULL,
  "m2PCI3Slots" integer NOT NULL,
  "m2PCI4Slots" integer NOT NULL,
  "extensionPCI3x1" integer NOT NULL,
  "extensionPCI3x4" integer NOT NULL,
  "extensionPCI3x8" integer NOT NULL,
  "extensionPCI3x16" integer NOT NULL,
  "extensionPCI4x1" integer NOT NULL,
  "extensionPCI4x4" integer NOT NULL,
  "extensionPCI4x8" integer NOT NULL,
  "extensionPCI4x16" integer NOT NULL,
  "usb3Slots" integer NOT NULL,
  "usb3Headers" integer NOT NULL,
  "usb3CSlots" integer NOT NULL,
  "vga" integer NOT NULL,
  "dvi" integer NOT NULL,
  "dp" integer NOT NULL,
  "hdmi" integer NOT NULL,
  "wifi" text NOT NULL,
  "graphics" text NOT NULL,
  "imageUrl" text NOT NULL,
  "originalUrl" text NOT NULL,
  "productUrl" text
);

CREATE TABLE IF NOT EXISTS desktop."FonteDeAlimentacao" (
  "name" text NOT NULL,
  "mpn" text PRIMARY KEY,
  "ean" text NOT NULL,
  "brand" text NOT NULL,
  "power" integer NOT NULL,
  "efficiency" text NOT NULL,
  "type" text NOT NULL,
  "eightPin" integer NOT NULL,
  "sixPin" integer NOT NULL,
  "imageUrl" text NOT NULL,
  "originalUrl" text NOT NULL,
  "productUrl" text
);

CREATE TABLE IF NOT EXISTS desktop."SSD" (
  "name" text NOT NULL,
  "mpn" text PRIMARY KEY,
  "ean" text NOT NULL,
  "brand" text NOT NULL,
  "formFactor" text NOT NULL,
  "protocol" text NOT NULL,
  "capacity" integer NOT NULL,
  "nandType" text NOT NULL,
  "controller" text NOT NULL,
  "imageUrl" text NOT NULL,
  "originalUrl" text NOT NULL,
  "productUrl" text
);

CREATE TABLE IF NOT EXISTS desktop."Compat_PlaceMae_CPU" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "placaMae_mpn" text NOT NULL,
  "cpu_mpn" text NOT NULL
);

CREATE TABLE IF NOT EXISTS desktop."Compat_PlacaMae_MemoriaRAM" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "placaMae_mpn" text NOT NULL,
  "ram_mpn" text NOT NULL
);

CREATE TABLE IF NOT EXISTS desktop."Compat_PlacaMae_GPU" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "placaMae_mpn" text NOT NULL,
  "gpu_mpn" text NOT NULL
);

CREATE TABLE IF NOT EXISTS desktop."Compat_CPUCooler_CPU" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "cooler_mpn" text NOT NULL,
  "cpu_mpn" text NOT NULL
);

CREATE TABLE IF NOT EXISTS desktop."Compat_GPU_Fonte" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "gpu_mpn" text NOT NULL,
  "fonte_mpn" text NOT NULL
);

CREATE TABLE IF NOT EXISTS desktop."Compat_PlacaMae_SSD" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "placaMae_mpn" text NOT NULL,
  "ssd_mpn" text NOT NULL
);

CREATE TABLE IF NOT EXISTS desktop."Compat_PlacaMae_HD" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "placaMae_mpn" text NOT NULL,
  "hd_mpn" text NOT NULL
);

CREATE TABLE IF NOT EXISTS desktop."Compat_PlacaMae_Fonte" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "placaMae_mpn" text NOT NULL,
  "fonte_mpn" text NOT NULL
);

CREATE TABLE IF NOT EXISTS desktop."CPU_PlacaMae" (
  "CPU_socket" text,
  "PlacaMae_socket" text,
  PRIMARY KEY ("CPU_socket", "PlacaMae_socket")
);

ALTER TABLE desktop."CPU_PlacaMae" ADD FOREIGN KEY ("CPU_socket") REFERENCES desktop."CPU" ("socket");

ALTER TABLE desktop."CPU_PlacaMae" ADD FOREIGN KEY ("PlacaMae_socket") REFERENCES desktop."PlacaMae" ("socket");

CREATE TABLE IF NOT EXISTS desktop."CPU_CPUCooler" (
  "CPU_socket" text,
  "CPUCooler_sockets" text,
  PRIMARY KEY ("CPU_socket", "CPUCooler_sockets")
);

ALTER TABLE desktop."CPU_CPUCooler" ADD FOREIGN KEY ("CPU_socket") REFERENCES desktop."CPU" ("socket");

ALTER TABLE desktop."CPU_CPUCooler" ADD FOREIGN KEY ("CPUCooler_sockets") REFERENCES desktop."CPUCooler" ("sockets");

ALTER TABLE desktop."MemoriaRAM" ADD FOREIGN KEY ("type") REFERENCES desktop."PlacaMae" ("memoryType");
